{
	"info": {
		"_postman_id": "fd8839ae-daed-4343-ad67-24f62e2f49b2",
		"name": "Wisely Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Restaurant",
			"item": [
				{
					"name": "Create One Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($name: String!, $location: String!, $timezone: String!) {\n  createOneRestaurant(input:{\n    restaurant:{\n      name: $name,\n      location: $location,\n      timezone: $timezone,\n    }\n  }) {\n    id\n  }\n}",
								"variables": "{\n    \"name\": \"Matt2's Place\",\n    \"location\": \"Kansas City, MO\",\n    \"timezone\": \"America/Central\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update One Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    updateOneRestaurant(input: {\n        id: 1,\n        update: {\n            location: \"North Kansas City, MO\"\n        }\n    }) {\n        id,\n        name,\n        location,\n        timezone\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete One Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n    deleteOneRestaurant(input: {\n        id: 3\n    }) {\n        id\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($restaurantId: Int!) {\n    restaurant(id: $restaurantId) {\n        name,\n        location,\n        timezone,\n        created,\n        updated\n    }\n}",
								"variables": "{\n    \"restaurantId\": 1\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Inventory",
			"item": [
				{
					"name": "Create Inventory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  createManyInventories(createInputData: [\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"15:00\"\n      limit: 10\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"15:15\",\n      limit: 5\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"15:30\",\n      limit: 5\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"15:45\",\n      limit: 5\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"16:00\",\n      limit: 5\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"16:15\",\n      limit: 2, \n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"16:30\",\n      limit: 5,\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"16:45\",\n      limit:5,\n    },\n    {\n      restaurantId: 1,\n      date: \"2021-06-22\",\n      time: \"17:00\",\n      limit: 5\n    }\n  ]) {\n    id,\n    date,\n    time,\n    limit\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create For Range",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation() {\n  createForRange(input: {\n    restaurantId: 1,\n    limit: 5,\n    startDate: \"2021-07-01\",\n    startTime: \"15:00\",\n    endDate: \"2021-07-01\",\n    endTime: \"20:00\"\n  }) {\n    id\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Inventory for Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($restaurantId: Float!) {\n    inventories(\n        filter: {\n            restaurantId: { eq: $restaurantId },\n        }, \n        sorting: [\n            { field: date, direction: DESC },\n            { field: time, direction: DESC },\n        ]\n    ) {\n        edges {\n            node {\n                date,\n                time,\n                limit,\n            }\n        }\n    } \n}",
								"variables": "{\n    \"restaurantId\": 1\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Inventory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $limit: Int!, $date: String!, $time: String!) {\n  updateOneInventory(input: {\n    id: $id,\n    update: {\n      limit: $limit,\n      date: $date,\n      time: $time\n    }\n  }) {\n    limit,\n    time,\n    date\n  }\n}",
								"variables": "{\n    \"id\": 1,\n    \"limit\": 10,\n    \"date\": \"2021-06-22\",\n    \"time\": \"15:00\"\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservation",
			"item": [
				{
					"name": "Create Reservation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  createOneReservation(createInputData: {\n    restaurantId: 1,\n    inventoryId: 2,\n    user: \"matt@mattcarter.io\",\n    name: \"Matt Carter\",\n    size: 2,\n  }) {\n    id\n  }\n}",
								"variables": ""
							},
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete One Reservation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: Int!) {\n  deleteOneReservation(input: {\n      id: $id\n  }) {\n      id\n  }\n}",
								"variables": "{\n    \"id\": 1\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Reservations for Restaurant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($restaurantId: Float!, $inventoryId: Float!) {\n    reservations(\n        filter: {\n            restaurantId: { eq: $restaurantId },\n            inventoryId: { eq: $inventoryId },\n        },\n        sorting: [\n            { field: size, direction: DESC }\n        ]\n    ) {\n    edges {\n      node {\n        user,\n        name,\n        inventoryId,\n        size\n      }\n    },\n  }\n}",
								"variables": "{\n    \"restaurantId\": 1,\n    \"inventoryId\": 1\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Reservation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: Int!, $size: Int!) {\n  updateOneReservation(id: $id, input: {\n    size: $size\n  }) {\n    size,\n    updated\n  }\n}",
								"variables": "{\n    \"id\": 15,\n    \"size\": 2\n}"
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}